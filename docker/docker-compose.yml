version: '3'

networks:
  default:
    driver: bridge

services:
  app:
    container_name: ${COMPANY_NAME}-app
    build:
      context: ..
      dockerfile: docker/php/${APPLICATION_ENV}/Dockerfile
      args:
        - PHP_VERSION=${PHP_VERSION}
        - APPLICATION_USER_ID=${APPLICATION_USER_ID}
        - APPLICATION_USER_GROUP=${APPLICATION_USER_GROUP}
        - COMPOSER_VERSION=${COMPOSER_VERSION}
    volumes:
      - ${APPLICATION_PATH}:/var/www/html/
      - ${COMPOSER_CACHE_PATH}:/var/www/.composer
    user: ${APPLICATION_USER_ID}:${APPLICATION_USER_GROUP}
    working_dir: /var/www/${COMPANY_NAME}/
    networks:
      - default
    environment:
      COMPOSER_HOME: /var/www/.composer
      PHP_IDE_CONFIG: serverName=localhost

  nginx:
    container_name: ${COMPANY_NAME}-nginx
    image: nginx:latest
    ports:
      - ${APPLICATION_HTTP_PORT}:80
      - ${APPLICATION_HTTPS_PORT}:443
    volumes:
      - ${APPLICATION_PATH}:/var/www/${APPLICATION_NAME}/
      - ./nginx/${APPLICATION_ENV}/config/:/etc/nginx/conf.d/config/
      - ./nginx/${APPLICATION_ENV}/certs/:/etc/nginx/conf.d/certs/
      - ./nginx/${APPLICATION_ENV}/logs/:/var/log/nginx/
    depends_on:
      - app
    networks:
      - default
    environment:
      - APPLICATION_DOMAIN=${APPLICATION_DOMAIN}
      - APPLICATION_NAME=${APPLICATION_NAME}
      - APP_ENV=${APPLICATION_ENV}
    command: /bin/bash -c "nginx -g 'daemon off;'"

  mysql:
    container_name: ${COMPANY_NAME}-mysql
    image: mysql:latest
    volumes:
      - ./mysql/mysql.conf:/etc/mysql/conf.d/mysql.cnf
      - ./mysql/db/:/var/lib/mysql
      - ./mysql/dumps/:/docker-entrypoint-initdb.d/
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    user: ${APPLICATION_USER_ID}:${APPLICATION_USER_GROUP}
    networks:
      - default

  elasticsearch:
    container_name: ${COMPANY_NAME}-elasticsearch
    build:
      context: .
      dockerfile: elasticsearch/Dockerfile
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - default
